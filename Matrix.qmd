---
title: "Partie 4 - L'éternel déménagement"
author: "Quentin"
date: "2023-11-15"
output: html_document
---

![Schéma des péripéties suricatiennes](C:/Users/qlamb/Documents/R/Schema_suricates.png)

Après ce nouveau coup dur et cette épidémie, les survivants de notre famille de suricate sont de nouveau contraints de se mettre en recherche d'un habitat et de rejoindre une nouvelle colonie. Pour ce choix, plusieurs options et colonies s'offrent à eux, chacune avec une probabilité différente d'être rejointe en fonction de la pénibilité du trajet et des ressources qu'elle contient. Autrement dit, les flèches reliant les habitats représentent les probabilités de les rejoindre. Lorsque les habitats sont rejoints, une nouvelle flèche entre en jeu pour déterminer la probabilité d'être acceptés dans la colonie ; lorsque c'est le cas, les suricates s'installent alors définitivement et cessent leurs déplacements. En revanche, lorsque ceux-ci ne parviennent pas à être acceptés dans une colonie, ils peuvent alors tenter leur chance dans une nouvelle ou retenter d'être acceptés dans une colonie précédente. Ces différentes informations permettent de construire le schéma précédent. 

A titre d'exemple, nos pauvres suricates se trouvent initialement en position O et ne peuvent rester à cet endroit. Cependant, ils peuvent gagner une petite colonie proche (colonie A) avec une probabilité d'y arriver de 0.9 et d'y être acceptés de 0.6 ou une colonie plus lointaine (colonie C) avec une probabilité d'y arriver de 0.1 et d'y être acceptés de 0.8. 

Le schéma ci-dessus est ce que l'on appelle une "Chaîne de Markov" dans laquelle les différentes probabilités sont numériquement anotées. Une chaîne de Markov peut se définir comme étant un processus stochastique à temps discret ou à temps continu et à espace d'états discrets définit comme étant "sans mémoire" car dépendant uniquement de l'état présent et non des états antérieurs. 

Ces différents éléments et cette "Chaîne de Markov" nous permettent de réaliser une matrice T un peu particulière, que l'on appelle matrice de transition d'une "Chaîne de Markov". Celle-ci définit les probabilités de transition de chaque état au temps (t) vertical vers chaque état au temps (t+1) horizontal et figurant ci-dessous : 

$$
T=
\left(\begin{array}{cc} 
P(O|O) & P(A|O) & P(A1|O) & P(B|O) & P(B2|O) & P(C|O) & P(C3|O) & P(D|O) & P(D4|O)\\
P(O|A) & P(A|A) & P(A1|A) & P(B|A) & P(B2|A) & P(C|A) & P(C3|A) & P(D|A) & P(D4|A)\\
P(O|A1) & P(A|A1) & P(A1|A1) & P(B|A1) & P(B2|A1) & P(C|A1) & P(C3|A1) & P(D|A1) & P(D4|A1)\\
P(O|B) & P(A|B) & P(A1|B) & P(B|B) & P(B2|B) & P(C|B) & P(C3|B) & P(D|B) & P(D4|B)\\
P(O|B2) & P(A|B2) & P(A1|B2) & P(B|B2) & P(B2|B2) & P(C|B2) & P(C3|B2) & P(D|B2) & P(D4|B2)\\
P(O|C) & P(A|C) & P(A1|C) & P(B|C) & P(B2|C) & P(C|C) & P(C3|C) & P(D|C) & P(D4|C)\\
P(O|C3) & P(A|C3) & P(A1|C3) & P(B|C3) & P(B2|C3) & P(C|C3) & P(C3|C3) & P(D|C3) & P(D4|C3)\\
P(O|D) & P(A|D) & P(A1|D) & P(B|D) & P(B2|D) & P(C|D) & P(C3|D) & P(D|D) & P(D4|D)\\
P(O|D4) & P(A|D4) & P(A1|D4) & P(B|D4) & P(B2|D4) & P(C|D4) & P(C3|D4) & P(D|D4) & P(D4|D4)\\
\end{array}\right)
$$

En remplaçant la matrice algébrique précédente avec les valeurs issues du schéma de la chaîne de Markov, nous obtenons donc la matrice T suivante :

$$ T=
\left(\begin{array}{cc} 
0 & 0.9 & 0 & 0 & 0 & 0.1 & 0  & 0 & 0\\
0 & 0 & 0.6 & 0.4 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 0.1 & 0 & 0.7 & 0.2 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0\\
0.025 & 0 & 0 & 0.025 & 0 & 0 & 0.8 & 0.15 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 1 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & 0.1 & 0 & 0 & 0.9\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 1\\
\end{array}\right)
$$

Comme nous pouvons le remarquer, cette matrice fonctionne en temps discret du fait du passage du temps t au temps t+1 et de l'absence de période de transition entre les différents compartiments.
Cependant, elle pourrait également fonctionner en temps continu à espaces d'état discret, mais pour des raisons de simplicité nous allons travailler en conservant le temps discret.
Par exemple, dans la matrice précédente, nous pouvons lire que la probabilité de passer de la position O (la pauvre tente de camping de notre famille de suricates bien aimés) à la colonie A est de 0.9, soit 90%.

Si on tient compte du fait qu'au temps 0, les suricates sont dans leur tente de fortune, voici donc la condition initiale :

$$
T_0 =\left(\begin{array}{cc} 
1 & 0 & 0 & 0 & 0 & 0 & 0  & 0 & 0\\
\end{array}\right)
$$
A l'issue du premier pas de temps, nous auront :

$$
T_1 = \left(\begin{array}{cc}
1 & 0 & 0 & 0 & 0 & 0 & 0  & 0 & 0\\
\end{array}\right).\left(\begin{array}{cc} 
0 & 0.9 & 0 & 0 & 0 & 0.1 & 0  & 0 & 0\\
0 & 0 & 0.6 & 0.4 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 0.1 & 0 & 0.7 & 0.2 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0\\
0.025 & 0 & 0 & 0.025 & 0 & 0 & 0.8 & 0.15 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 1 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & 0.1 & 0 & 0 & 0.9\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 1\\
\end{array}\right) = T_0.T
$$
Donc :

$$ 
T_1 =\left(\begin{array}{cc} 
0 & 0.9 & 0 & 0 & 0 & 0.1 & 0 & 0 & 0\\
\end{array}\right)
$$
Autrement dit, au bout du premier pas de temps les suricates auront 90% de probabilité de se trouver dans la colonie A et 10% de probabilité de se trouver dans la colonie C.

A l'issue du second pas de temps, nous auront :

$$
T_2 = \left(\begin{array}{cc}
0 & 0.9 & 0 & 0 & 0 & 0.1 & 0 & 0 & 0\\
\end{array}\right).\left(\begin{array}{cc} 
0 & 0.9 & 0 & 0 & 0 & 0.1 & 0  & 0 & 0\\
0 & 0 & 0.6 & 0.4 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 0.1 & 0 & 0.7 & 0.2 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0\\
0.025 & 0 & 0 & 0.025 & 0 & 0 & 0.8 & 0.15 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 1 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & 0.1 & 0 & 0 & 0.9\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 1\\
\end{array}\right)=T_1.T
$$
Donc :

$$ 
T_2 =\left(\begin{array}{cc} 
0.0025 & 0 & 0.54 & 0.3625 & 0 & 0 & 0.08 & 0.015 & 0\\
\end{array}\right)
$$

A l'issue du second pas de temps, la famille de suricate aura 0.25% de probabilité d'être revenu à son campement initial (position 0), 54% de probabilité d'être accepté par la colonie A, 36.25% de probabilité de se retrouver dans la colonie B, 8% de probabilité d'avoir été accepté dans la colonie C et 1.5% de probabilité d'être d'atteindre la colonie D avec les plus grandes quantités de ressources.

De manière générale, nous pouvons convenir du produit matriciel suivant :

$$
T_t = \left(\begin{array}{cc}
1 & 0 & 0 & 0 & 0 & 0 & 0  & 0 & 0\\
\end{array}\right).\left(\begin{array}{cc} 
0 & 0.9 & 0 & 0 & 0 & 0.1 & 0  & 0 & 0\\
0 & 0 & 0.6 & 0.4 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 0.1 & 0 & 0.7 & 0.2 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0\\
0.025 & 0 & 0 & 0.025 & 0 & 0 & 0.8 & 0.15 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 1 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & 0.1 & 0 & 0 & 0.9\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 1\\
\end{array}\right)^t=T_0.T^t
$$
La théorie de la chaîne de Markov nous dit qu'au bout d'un certain temps, la loi de probabilité sera indépendante de la loi initiale et nous obtiendrons une convergence vers différents points de la chaîne.

Rappel : Les propriétés d'une matrice stipulent la présence de valeurs et de vecteurs propres. On dit que λ est une valeur propre de la matrice T s'il existe un vecteur propre V tel que T.V = λ.V. On dit alors que λ et V sont un couple propre de la matrice. 
Les valeurs propres s'obtiennent en résolvant le polynôme caractéristique de la matrice T

Déterminer la loi invariante q de la Matrice de transition T revient à calculer le vecteur propre associé à la valeur propre 1, à savoir :

$$
q.T=q\\
$$

Donc :

$$
q.T=q.I\\
q(I-T)=0\\
$$
Alors
$$
q
\left(\begin{array}{cc}
\left(\begin{array}{cc}
1 & 0 & 0 & 0 & 0 & 0 & 0  & 0 & 0\\
0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & 1 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 1 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 1 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 1\\
\end{array}\right)-\left(\begin{array}{cc} 
0 & 0.9 & 0 & 0 & 0 & 0.1 & 0  & 0 & 0\\
0 & 0 & 0.6 & 0.4 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 0.1 & 0 & 0.7 & 0.2 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0\\
0.025 & 0 & 0 & 0.025 & 0 & 0 & 0.8 & 0.15 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 1 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & 0.1 & 0 & 0 & 0.9\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 1\\
\end{array}\right)
\end{array}\right)
=0
$$
$$
q.
\left(\begin{array}{cc}
1 & -0.9 & 0 & 0 & 0 & -0.1 & 0  & 0 & 0\\
0 & 1 & -0.6 & -0.4 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & -0.1 & 1 & -0.7 & -0.2 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\
-0.025 & 0 & 0 & -0.025 & 0 & 1 & -0.8 & -0.15 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & -0.1 & 0 & 1 & -0.9\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\
\end{array}\right)
=0
$$

Ce qui signifie que :

$$
\left(\begin{array}{cc} 
q_1 & q_2 & q_3 & q_4 & q_5 & q_6 & q_7 & q_8 & q_9\\
\end{array}\right).
\left(\begin{array}{cc}
1 & -0.9 & 0 & 0 & 0 & -0.1 & 0  & 0 & 0\\
0 & 1 & -0.6 & -0.4 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & -0.1 & 1 & -0.7 & -0.2 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\
-0.025 & 0 & 0 & -0.025 & 0 & 1 & -0.8 & -0.15 & 0\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 0 & -0.1 & 0 & 1 & -0.9\\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\
\end{array}\right)
=0 
$$

Donc que


q4=0

q1 + q6*(-0.025) = 0
q1 = 0
q2 = 0
q6 = 0
q4 = 0
q8 = 0



q2 = 0.025
q3
q4 = 0.15


```{r}
0.025*(-0.4)+0.15



x*-0.1=-0.015
```



Etant donné qu'aller plus loin "à la main" s'avèrerait particulièrement chronophage, il est également possible d'utiliser le logiciel R :
On crée tout d'abord la matrice :
```{r}
T<-matrix(c(0,0.9,0,0,0,0.1,0,0,0,0,0,0.6,0.4,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0.1,0,0.7,0.2,0,0,0,0,0,0,0,1,0,0,0,0,0.025,0,0,0.025,0,0,0.8,0.15,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0.1,0,0,0.9,0,0,0,0,0,0,0,0,1),ncol=9,nrow=9,byrow=TRUE)
vecP<-eigen(T)
```

