---
title: "Ordinary Differential Equations and their application in Ecology"
author: "Am√©lie Cocchiara, Th√©o Laguilliez, Cl√©ment Monaury, Laura Martinez Anton, Anastasia Paupe"
date: "`r Sys.Date()`"
bibliography: references.bib
execute: 
  freeze: auto
output: 
  html_document:
   toc: true
   toc_float: true
  df_print: paged
---

```{=html}
<style>
body {
text-align: justify}
</style>
```
```{r init, include=FALSE}
# Configure your session and load R packages
rm(list=ls()) # Properly clear workspace

# Install packages
pkg <- c("knitr", "ggplot2", "tidyverse", "draw", "devtools")
inst.pkg <- row.names(installed.packages())
pkg2inst <- pmatch(pkg, inst.pkg)
if (any(is.na(pkg2inst[1:4]))) install.packages(pkg[which(is.na(pkg2inst[1:4]))],
                                                repos = "http://cran.at.r-project.org")
# Load packages
library(knitr)
opts_chunk$set(echo = FALSE, comment = "", cache = TRUE, fig.align = "center")
library(ggplot2) # graph package
library(tidyverse)
library(draw) # To draw some shapes
library(devtools)
devtools::install_github("hadley/emo")
```

```{r, include = FALSE}
# Generation of the needed emoji
emo::ji("alien")
emo::ji("goat")
emo::ji("vomit")
emo::ji("silly")
emo::ji("sunglasses")
```

# Introduction & objectives

Welcome to you, young Master 1 student!

It's now been ?x?(= number of chapters before ours) chapters since you plunged into this adventure full of numbers, formulas and other mathematical oddities (ü§¢). At the moment, you're probably feeling a strong need for a change of orientation. I mean, we're doing ecology, not maths! And raising goats in Auvergne sounds pretty cool...kinds of...üêê

But don't give up! The first (really interesting üòú) chapter is right there in front of you!

Are you interested in population and epidemiological trends and dynamics? Would you like to be able to predict the future (and the past, no kidding) from the present?

Then this is the chapter for you! Work it as much as you can! You'll end up shining in modelling (and maybe even in society).

At the end, you'll be able to ...

# I. Dynamic systems

Let's start simply!

First of all, let's define the framework of the study (= cadre de l'√©tude).

We consider a dynamic system. Or in other words, a physical system whose state changes as a function of time. By "state", we mean "physical variables" such as a number of individuals, a position, a temperature, etc., which are functions of time (= which evolve over time).

For example, suppose you wanted to study the evolution over time of a population of aliens newly landed on Earth (yes, it's possible, I saw that in men in black üòé).

Your system is: the Alien population.\
The state of this population is: the number of individuals, noted 'üëΩ'.\
This state is a function of time (the number of individuals changes over time). We therefore note it: 'üëΩ(t)'.

So your aim is to study this system. But as you can imagine, you can't start from scratch! To study the evolution of such a system, you need to know:\
- **its initial state**: values of its characteristic variables at the initial time of the study (t=0).\
- **the processes underway in the biological system**: the way of gaining (i.e. birth, migration) and/or losing (i.e. mortality) individuals for example. Don't hesitate to draw the system on a piece of paper, to avoid getting lost (*Figure 1*)!\
- **the parameters associated with these processes**

Let's make it more concrete: 
```{r}
# Set drawing settings
#drawSettings(pageWidth = 5, pageHeight = 5, units = "inches")

# Create a new drawing page
drawPage()

# Draw the different shapes of the system on the page
#     * The rectangle
drawBox(x = 2.5, y = 2.5, width = 1, height = 1)

#     * The mortality arrow 
drawLine(x = c(3, 4),
         y = c(2.5, 2.5))
drawLine(x = c(3.9, 4),
         y = c(2.4, 2.5))
drawLine(x = c(3.9, 4),
         y = c(2.6, 2.5))

#     * The migration arrow 
drawLine(x = c(1, 2),
         y = c(2.5, 2.5))
drawLine(x = c(1.9, 2),
         y = c(2.4, 2.5))
drawLine(x = c(1.9, 2),
         y = c(2.6, 2.5))

#     * The birth 'arrow' (its a circle) 
drawCircle(x = 2.5,
           y = 3.4,
           radius = 0.4)
drawLine(x = c(2.5, 2.6),
         y = c(3, 3.1))
drawLine(x = c(2.5, 2.6),
         y = c(3, 2.9))

# Add the text
#     * For the population
drawText(x = 2.5, y = 2.5, text = "Population")
drawText(x = 2.5, y = 2.3, text = "üëΩ(t)")

#     * For the mortality
drawText(x = 4.45, y = 2.5, text = "Mortality")
drawText(x = 3.5, y = 2.35, text = "d üëΩ(t)")

#     * For the migration
drawText(x = 0.5, y = 2.5, text = "Migration")
drawText(x = 1.4, y = 2.35, text = "m")

#     * For the birth
drawText(x = 2.5, y = 3.4, text = "Birth")
drawText(x = 3.2, y = 3.4, text = "b üëΩ(t)")

```

```{r}
# Set drawing settings
#drawSettings(pageWidth = 5, pageHeight = 5, units = "inches")

# Create a new drawing page
drawPage()

# Draw the orthogonal plan on the page
#     * The x axe 
drawLine(x = c(0.5, 5),
         y = c(0.5, 0.5),
         lineWidth = 2)
#     * The y axe 
drawLine(x = c(0.5, 5),
         y = c(0.5, 0.5),
         lineWidth = 2)
```

$$\int_a^b üëΩ(t) \, \mathrm dt$$

# II. Order 1 ODE & definition of ODE

# III. Order 2 ODE

# IV. Order 3 ODE

# Conclusion & motivation words!